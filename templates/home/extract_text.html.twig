{# templates/home/extract_text.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Extracted Text - {{ filename }}{% endblock %}

{% block body %}
<div class="example-wrapper">
    <h1>Extracted Text from: {{ filename }}</h1>
    
    <div class="text-stats" style="background: #f8f9fa; padding: 15px; border-radius: 5px; margin-bottom: 20px;">
        <strong>Statistics:</strong> 
        {{ textLength }} characters, 
        {{ wordCount }} words
        {% if error %}
            | <span style="color: #dc3545;">Error: {{ error }}</span>
        {% endif %}
    </div>

    {% if error %}
        <div class="alert alert-warning">
            <h4>Text Extraction Issue</h4>
            <p>{{ error }}</p>
            <p>This PDF might be image-based or scanned. You'll need OCR (Optical Character Recognition) software to extract text from it.</p>
        </div>
    {% else %}
        <div class="text-actions" style="margin-bottom: 20px;">
            <a href="{{ path('app_download_text', {'filename': filename}) }}" class="btn btn-primary">
                Download as Text File
            </a>
            <button onclick="copyToClipboard()" class="btn btn-secondary">
                Copy to Clipboard
            </button>
        </div>

        <div class="extracted-text" style="background: #f8f9fa; padding: 20px; border-radius: 5px; border: 1px solid #ddd; max-height: 600px; overflow-y: auto;">
            <pre style="white-space: pre-wrap; font-family: inherit; margin: 0;">{{ extractedText }}</pre>
        </div>
    {% endif %}

    <div class="navigation-buttons" style="margin-top: 20px;">
        <a href="{{ path('app_pdf_options', {'filename': filename}) }}" class="btn btn-outline-secondary">
            Back to Options
        </a>
        <a href="{{ path('app_view_pdf', {'filename': filename}) }}" class="btn btn-outline-primary">
            View PDF
        </a>
        <a href="{{ path('app_home') }}" class="btn btn-secondary">
            Upload Another PDF
        </a>
    </div>
</div>

<script>
function copyToClipboard() {
    const text = `{{ extractedText|e('js') }}`;
    navigator.clipboard.writeText(text).then(function() {
        // Show success message
        const button = event.target;
        const originalText = button.textContent;
        button.textContent = 'Copied!';
        button.classList.add('btn-success');
        button.classList.remove('btn-secondary');
        
        setTimeout(function() {
            button.textContent = originalText;
            button.classList.remove('btn-success');
            button.classList.add('btn-secondary');
        }, 2000);
    }).catch(function(err) {
        alert('Failed to copy text: ' + err);
    });
}
</script>
{% endblock %}